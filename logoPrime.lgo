; Simple primality test
TO IsPrime :Num
    make "sqrtNum sqrt :Num
    make "Divisor 2  
    make "bPrime 1 

    while [and (:Divisor <= :sqrtNum) (:bPrime = 1)] [    
        if (modulo :Num :Divisor) = 0 
        [ 
            make "bPrime 0 
        ]
        make "Divisor :Divisor+1
    ]

    OUTPUT :bPrime
END

; Draw the specified n-sided polygon at given point with given fill color
TO DrawPolygonAt :X :Y :EdgeNum :EdgeSize :FillColor

    ; Save position and heading
    make "SaveX xcor
    make "SaveY ycor
    make "SaveHeading heading

    ; Math magic :) Calculate the Polygon radius from the required Edge size.
    make "r  :EdgeSize/(2*sin(180/:EdgeNum))

    pu

    home

    repeat :EdgeNum [
        ; Go to center of polygon
        setxy :X :Y

        ; Forward to next vertex
        fd :r

        ; Save current vertex as previous one
        make "PrevX xcor
        make "PrevY ycor

        ; Go back to the center
        setxy :X :Y

        ; Rotate 360/n degrees where n is number of sides
        rt 360/:EdgeNum

        ; Forward to next vertex
        fd :r

        ; Now Draw the line from last vertex to the previous one
        pd
        setxy :PrevX :PrevY
        pu
    ]

    ; At this point we have drawn an empty (no fill) polygon
    ; Go to the center of the polygon one last time, to fill it with the required fill color
    setxy :X :Y
    pd
     SETFLOODCOLOR arraytolist :FillColor
     FILL
    pu

    ; Restore position and heading
    setxy :SaveX :SaveY
    seth :SaveHeading
END

TO DrawPolygonRing :PolyNum :EdgeNum :RingDistance :FillColor :EdgeSize
    pu
    show :PolyNum
    repeat :PolyNum [ 
        show :PolyNum
        setxy 0 0
        rt 360/:PolyNum
        fd :RingDistance
        DrawPolygonAt xcor ycor :EdgeNum :EdgeSize :FillColor
   ]
END


ht
cleartext
clearscreen
setsc "white

make "RingDistance 18

; Main loop for generating animation frames
for [ Frame 1 1 ] [
   clean

    ; Main loop to find primes
   for [ CurrNum 3 13 ] [
     if equal? (IsPrime :CurrNum) 1
     [  
       make "FillColor array 3
       setitem 1 :FillColor modulo :CurrNum*12 256
       setitem 2 :FillColor modulo :CurrNum*15 256
       setitem 3 :FillColor modulo :CurrNum*18 256
       DrawPolygonRing :CurrNum :CurrNum :RingDistance :FillColor 30
       make "RingDistance :RingDistance+:CurrNum*12.5
     ]
   ]

   ;rt 2
   ;GIFSAVE WORD :Frame ".gif
]
